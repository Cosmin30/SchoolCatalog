// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolCatalog.Server.Data;

#nullable disable

namespace SchoolCatalog.Server.Migrations
{
    [DbContext(typeof(SchoolCatalogContext))]
    [Migration("20250825092347_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClasaMaterie", b =>
                {
                    b.Property<int>("ClaseIdClasa")
                        .HasColumnType("int");

                    b.Property<int>("MateriiIdMaterie")
                        .HasColumnType("int");

                    b.HasKey("ClaseIdClasa", "MateriiIdMaterie");

                    b.HasIndex("MateriiIdMaterie");

                    b.ToTable("ClasaMaterie");
                });

            modelBuilder.Entity("ClasaProfesor", b =>
                {
                    b.Property<int>("ClaseIdClasa")
                        .HasColumnType("int");

                    b.Property<int>("ProfesoriIdProfesor")
                        .HasColumnType("int");

                    b.HasKey("ClaseIdClasa", "ProfesoriIdProfesor");

                    b.HasIndex("ProfesoriIdProfesor");

                    b.ToTable("ClasaProfesor");
                });

            modelBuilder.Entity("SchoolCatalog.Server.Model.Clasa", b =>
                {
                    b.Property<int>("IdClasa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdClasa"));

                    b.Property<int?>("IdOrar")
                        .HasColumnType("int");

                    b.Property<string>("NumeClasa")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ProfilClasa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdClasa");

                    b.ToTable("Clase");
                });

            modelBuilder.Entity("SchoolCatalog.Server.Model.Elev", b =>
                {
                    b.Property<int>("IdElev")
                        .HasColumnType("int");

                    b.Property<int?>("ClasaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataNasterii")
                        .HasColumnType("datetime2");

                    b.Property<string>("NumeElev")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PrenumeElev")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdElev");

                    b.HasIndex("ClasaId");

                    b.ToTable("Elevi");
                });

            modelBuilder.Entity("SchoolCatalog.Server.Model.FisierTema", b =>
                {
                    b.Property<int>("IdFisier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFisier"));

                    b.Property<DateTime>("DataIncarcare")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdElev")
                        .HasColumnType("int");

                    b.Property<string>("NumeFisier")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TemaId")
                        .HasColumnType("int");

                    b.Property<string>("UrlFisier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdFisier");

                    b.HasIndex("IdElev");

                    b.HasIndex("TemaId");

                    b.ToTable("FisiereTema");
                });

            modelBuilder.Entity("SchoolCatalog.Server.Model.Materie", b =>
                {
                    b.Property<int>("IdMaterie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMaterie"));

                    b.Property<string>("NumeMaterie")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ProfesorId")
                        .HasColumnType("int");

                    b.HasKey("IdMaterie");

                    b.HasIndex("ProfesorId");

                    b.ToTable("Materii");
                });

            modelBuilder.Entity("SchoolCatalog.Server.Model.Media", b =>
                {
                    b.Property<int>("IdMedie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMedie"));

                    b.Property<int>("IdElev")
                        .HasColumnType("int");

                    b.Property<int>("IdMaterie")
                        .HasColumnType("int");

                    b.Property<double>("Valoare")
                        .HasColumnType("float");

                    b.HasKey("IdMedie");

                    b.HasIndex("IdElev");

                    b.HasIndex("IdMaterie");

                    b.ToTable("Medii");
                });

            modelBuilder.Entity("SchoolCatalog.Server.Model.Nota", b =>
                {
                    b.Property<int>("IdNota")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNota"));

                    b.Property<DateTime>("DataNotei")
                        .HasColumnType("datetime2");

                    b.Property<bool>("EsteAnulata")
                        .HasColumnType("bit");

                    b.Property<int>("IdElev")
                        .HasColumnType("int");

                    b.Property<int>("IdMaterie")
                        .HasColumnType("int");

                    b.Property<int>("Valoare")
                        .HasColumnType("int");

                    b.HasKey("IdNota");

                    b.HasIndex("IdElev");

                    b.HasIndex("IdMaterie");

                    b.ToTable("Note");
                });

            modelBuilder.Entity("SchoolCatalog.Server.Model.Orar", b =>
                {
                    b.Property<int>("IdOrar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOrar"));

                    b.Property<string>("AnScolar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriereOrar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdClasa")
                        .HasColumnType("int");

                    b.HasKey("IdOrar");

                    b.HasIndex("IdClasa")
                        .IsUnique();

                    b.ToTable("Orare");
                });

            modelBuilder.Entity("SchoolCatalog.Server.Model.OrarItem", b =>
                {
                    b.Property<int>("IdOrarItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOrarItem"));

                    b.Property<int>("IdMaterie")
                        .HasColumnType("int");

                    b.Property<int>("IdOrar")
                        .HasColumnType("int");

                    b.Property<int>("IdProfesor")
                        .HasColumnType("int");

                    b.Property<string>("OraInceput")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("OraSfarsit")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("ZiSaptamana")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("IdOrarItem");

                    b.HasIndex("IdMaterie");

                    b.HasIndex("IdOrar");

                    b.HasIndex("IdProfesor");

                    b.ToTable("OrarItems");
                });

            modelBuilder.Entity("SchoolCatalog.Server.Model.Profesor", b =>
                {
                    b.Property<int>("IdProfesor")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataNasterii")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailProfesor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeProfesor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PrenumeProfesor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdProfesor");

                    b.ToTable("Profesori");
                });

            modelBuilder.Entity("SchoolCatalog.Server.Model.Tema", b =>
                {
                    b.Property<int>("IdTema")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTema"));

                    b.Property<string>("Descriere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdClasa")
                        .HasColumnType("int");

                    b.Property<int>("IdMaterie")
                        .HasColumnType("int");

                    b.Property<DateTime>("TermenLimita")
                        .HasColumnType("datetime2");

                    b.HasKey("IdTema");

                    b.HasIndex("IdClasa");

                    b.HasIndex("IdMaterie");

                    b.ToTable("Teme");
                });

            modelBuilder.Entity("SchoolCatalog.Server.Model.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdElev")
                        .HasColumnType("int");

                    b.Property<int?>("IdProfesor")
                        .HasColumnType("int");

                    b.Property<string>("Parola")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUser");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ClasaMaterie", b =>
                {
                    b.HasOne("SchoolCatalog.Server.Model.Clasa", null)
                        .WithMany()
                        .HasForeignKey("ClaseIdClasa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolCatalog.Server.Model.Materie", null)
                        .WithMany()
                        .HasForeignKey("MateriiIdMaterie")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClasaProfesor", b =>
                {
                    b.HasOne("SchoolCatalog.Server.Model.Clasa", null)
                        .WithMany()
                        .HasForeignKey("ClaseIdClasa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolCatalog.Server.Model.Profesor", null)
                        .WithMany()
                        .HasForeignKey("ProfesoriIdProfesor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SchoolCatalog.Server.Model.Elev", b =>
                {
                    b.HasOne("SchoolCatalog.Server.Model.Clasa", "Clasa")
                        .WithMany("Elevi")
                        .HasForeignKey("ClasaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SchoolCatalog.Server.Model.User", null)
                        .WithOne("Elev")
                        .HasForeignKey("SchoolCatalog.Server.Model.Elev", "IdElev")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clasa");
                });

            modelBuilder.Entity("SchoolCatalog.Server.Model.FisierTema", b =>
                {
                    b.HasOne("SchoolCatalog.Server.Model.Elev", "Elev")
                        .WithMany("FisiereTeme")
                        .HasForeignKey("IdElev")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolCatalog.Server.Model.Tema", "Tema")
                        .WithMany("Fisiere")
                        .HasForeignKey("TemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Elev");

                    b.Navigation("Tema");
                });

            modelBuilder.Entity("SchoolCatalog.Server.Model.Materie", b =>
                {
                    b.HasOne("SchoolCatalog.Server.Model.Profesor", "Profesor")
                        .WithMany("Materii")
                        .HasForeignKey("ProfesorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Profesor");
                });

            modelBuilder.Entity("SchoolCatalog.Server.Model.Media", b =>
                {
                    b.HasOne("SchoolCatalog.Server.Model.Elev", "Elev")
                        .WithMany("Medii")
                        .HasForeignKey("IdElev")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolCatalog.Server.Model.Materie", "Materie")
                        .WithMany("Medii")
                        .HasForeignKey("IdMaterie")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Elev");

                    b.Navigation("Materie");
                });

            modelBuilder.Entity("SchoolCatalog.Server.Model.Nota", b =>
                {
                    b.HasOne("SchoolCatalog.Server.Model.Elev", "Elev")
                        .WithMany("Note")
                        .HasForeignKey("IdElev")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolCatalog.Server.Model.Materie", "Materie")
                        .WithMany("Note")
                        .HasForeignKey("IdMaterie")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Elev");

                    b.Navigation("Materie");
                });

            modelBuilder.Entity("SchoolCatalog.Server.Model.Orar", b =>
                {
                    b.HasOne("SchoolCatalog.Server.Model.Clasa", "Clasa")
                        .WithOne("Orar")
                        .HasForeignKey("SchoolCatalog.Server.Model.Orar", "IdClasa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clasa");
                });

            modelBuilder.Entity("SchoolCatalog.Server.Model.OrarItem", b =>
                {
                    b.HasOne("SchoolCatalog.Server.Model.Materie", "Materie")
                        .WithMany()
                        .HasForeignKey("IdMaterie")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolCatalog.Server.Model.Orar", "Orar")
                        .WithMany("OrarItems")
                        .HasForeignKey("IdOrar")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolCatalog.Server.Model.Profesor", "Profesor")
                        .WithMany()
                        .HasForeignKey("IdProfesor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Materie");

                    b.Navigation("Orar");

                    b.Navigation("Profesor");
                });

            modelBuilder.Entity("SchoolCatalog.Server.Model.Profesor", b =>
                {
                    b.HasOne("SchoolCatalog.Server.Model.User", null)
                        .WithOne("Profesor")
                        .HasForeignKey("SchoolCatalog.Server.Model.Profesor", "IdProfesor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SchoolCatalog.Server.Model.Tema", b =>
                {
                    b.HasOne("SchoolCatalog.Server.Model.Clasa", "Clasa")
                        .WithMany("Teme")
                        .HasForeignKey("IdClasa")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SchoolCatalog.Server.Model.Materie", "Materie")
                        .WithMany("Teme")
                        .HasForeignKey("IdMaterie")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clasa");

                    b.Navigation("Materie");
                });

            modelBuilder.Entity("SchoolCatalog.Server.Model.Clasa", b =>
                {
                    b.Navigation("Elevi");

                    b.Navigation("Orar");

                    b.Navigation("Teme");
                });

            modelBuilder.Entity("SchoolCatalog.Server.Model.Elev", b =>
                {
                    b.Navigation("FisiereTeme");

                    b.Navigation("Medii");

                    b.Navigation("Note");
                });

            modelBuilder.Entity("SchoolCatalog.Server.Model.Materie", b =>
                {
                    b.Navigation("Medii");

                    b.Navigation("Note");

                    b.Navigation("Teme");
                });

            modelBuilder.Entity("SchoolCatalog.Server.Model.Orar", b =>
                {
                    b.Navigation("OrarItems");
                });

            modelBuilder.Entity("SchoolCatalog.Server.Model.Profesor", b =>
                {
                    b.Navigation("Materii");
                });

            modelBuilder.Entity("SchoolCatalog.Server.Model.Tema", b =>
                {
                    b.Navigation("Fisiere");
                });

            modelBuilder.Entity("SchoolCatalog.Server.Model.User", b =>
                {
                    b.Navigation("Elev");

                    b.Navigation("Profesor");
                });
#pragma warning restore 612, 618
        }
    }
}
